name: test-suite

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'true'
    - uses: actions/setup-java@v1
      with:
        java-version: '11' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - uses: actions/setup-python@v1
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64'

    - name: Set log level to "FINE" in apiserver
      run: sed -i 's/INFO/FINEST/g' api-server/src/main/resources/vertx-default-jul-logging.properties

    - name: Set log level to "FINE" in authenticator
      run: sed -i 's/INFO/FINEST/g' authenticator//src/main/resources/vertx-default-jul-logging.properties

    - name: Compile api server source files
      run: cd api-server && mvn clean package

    - name: Compile authenticator source files 
      run: cd authenticator && mvn clean package

    - name: Install jq and behave
      run: sudo apt-get -y install jq && sudo apt-get install python3-setuptools && sudo python3 -m pip install behave

    - name: Install Vermillion
      run: ./setup/install

    - name: Wait for the middleware to be available
      run:  cd setup && ./wait.sh

    - name: Load sample data into ES
      run: cd setup && ./load_sample_data.sh

    - name: Run tests and generate reports
      run:  ./coverage.sh

    - name: Clean Up files
      run:  ./cleanup.sh

    - name: Export docker logs to a file
      if: always()
      run: docker logs vertx >& logs.txt

    - name: Upload file 'logs.txt' as an artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: pass_file
        path: logs.txt
